<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{5FC04272-A276-41C5-A56A-249830499B19}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>STLStudyC</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C1_S1_Q5.cpp" />
    <ClCompile Include="C1_S1_연산자_오버로딩_정의_및_사용하기.cpp" />
    <ClCompile Include="C1_S3_단항 연산자 오버로딩.cpp" />
    <ClCompile Include="C1_S4_이항 연산자 오버로딩.cpp" />
    <ClCompile Include="C1_S5_전역 함수를 이용한 연산자 오버로딩.cpp" />
    <ClCompile Include="C1_S6_Point의 [] 연산자 중복.cpp" />
    <ClCompile Include="C1_S6_STL에 필요한 주요 연산자 오버로딩.cpp" />
    <ClCompile Include="C1_S6_몇 가지 함수 호출 연산자 오버로딩.cpp" />
    <ClCompile Include="C1_S6_스마트 포인터 PointPtr 클래스 생성.cpp" />
    <ClCompile Include="C1_S6_정수를 저장하는 간단한 Array 클래스.cpp" />
    <ClCompile Include="C1_S7_Point 클래스의 int 타입 변환 연산자.cpp" />
    <ClCompile Include="C1_S7_Point 클래스의 생성자.cpp" />
    <ClCompile Include="C1_S7_생성자를 이용한 타입 변환.cpp" />
    <ClCompile Include="C1_S7_타입 변환 연산자 오버로딩.cpp" />
    <ClCompile Include="C2_S1_함수 포인터 선언과 사용.cpp" />
    <ClCompile Include="C2_S2_C++ 함수 호출 방식.cpp" />
    <ClCompile Include="C2_S2_Point 클래스의 멤버 함수 포인터.cpp" />
    <ClCompile Include="C2_S2_정적 함수 포인터.cpp" />
    <ClCompile Include="C2_S3_STL의 for_each 알고리즘 사용.cpp" />
    <ClCompile Include="C2_S3_함수 포인터를 이용한 콜백 메커니즘 구현.cpp" />
    <ClCompile Include="C3_S1_두 정수형 매개변수를 갖는 함수 객체.cpp" />
    <ClCompile Include="C3_S1_멤버 변수를 갖는 함수 객체.cpp" />
    <ClCompile Include="C3_S1_함수 객체 정의.cpp" />
    <ClCompile Include="C3_S1_함수 객체를 사용한 콜백 함수 구현.cpp" />
    <ClCompile Include="C3_S2_Greater의 구현.cpp" />
    <ClCompile Include="C3_S2_Less의 구현.cpp" />
    <ClCompile Include="C3_S2_plus와 minus 함수 객체 구현.cpp" />
    <ClCompile Include="C3_S2_STL의 less 함수 객체.cpp" />
    <ClCompile Include="C4_S1_Point 객체를 출력하지 못하는 함수 템플릿 예제.cpp" />
    <ClCompile Include="C4_S1_Point 객체만의 함수 템플릿 특수화 지원.cpp" />
    <ClCompile Include="C4_S1_Swap()의 템플릿 함수.cpp" />
    <ClCompile Include="C4_S1_두 개의 매개변수를 갖는 함수 템플릿.cpp" />
    <ClCompile Include="C4_S1_배열 출력 함수 템플릿.cpp" />
    <ClCompile Include="C4_S1_함수 템플릿.cpp" />
    <ClCompile Include="C4_S1_함수 템플릿의 명시적 타입 지정 후 호출.cpp" />
    <ClCompile Include="C4_S2_ObjectInfo 특수화 버전.cpp" />
    <ClCompile Include="C4_S2_객체 정보를 출력하는 ObjectInfo 클래스.cpp" />
    <ClCompile Include="C4_S2_디폴트 매개변수 값을 갖는 클래스 템플릿 Array.cpp" />
    <ClCompile Include="C4_S2_정수, 실수, 문자열 Array 클래스 정의.cpp" />
    <ClCompile Include="C4_S2_클래스 템플릿 Array.cpp" />
    <ClCompile Include="C4_S3_For_each() 함수.cpp" />
    <ClCompile Include="C4_S3_Pair 클래스.cpp" />
    <ClCompile Include="C4_S3_Q1.cpp" />
    <ClCompile Include="C4_S3_Q2.cpp" />
    <ClCompile Include="C4_S3_Q3.cpp" />
    <ClCompile Include="C4_S3_반환 타입과 매개변수 타입을 인자로 갖는 함수 객체.cpp" />
    <ClCompile Include="C4_S3_템플릿 Less, Greater.cpp" />
    <ClCompile Include="C4_S3_함수 객체(PrintFunctor)를 사용한 For_each().cpp" />
    <ClCompile Include="C4_S3_함수 템플릿 For_each().cpp" />
    <ClCompile Include="C5_S2_deque의 임의 접근 반복자.cpp" />
    <ClCompile Include="C5_S2_find 알고리즘.cpp" />
    <ClCompile Include="C5_S2_less 조건자와 not2.cpp" />
    <ClCompile Include="C5_S2_stack 컨테이너.cpp" />
    <ClCompile Include="C5_S2_vector 컨테이너.cpp" />
    <ClCompile Include="C5_S2_vector 컨테이너를 적용한 stack 컨테이너.cpp" />
    <ClCompile Include="C5_S2_vector와 list 컨테이너의 반복자와 sort 알고리즘.cpp" />
    <ClCompile Include="C5_S2_vector의 반복자.cpp" />
    <ClCompile Include="C5_S2_vector의 역반향 반복자.cpp" />
    <ClCompile Include="C5_S2_vector의 임의 접근 반복자.cpp" />
    <ClCompile Include="C5_S2_역방향 반복자 reverse_iterator.cpp" />
    <ClCompile Include="C5_S2_정방향 반복자와 역방향 반복자가 가리키는 값.cpp" />
    <ClCompile Include="C5_S2_컨테이너 기본 할당기 allocator.cpp" />
    <ClCompile Include="C5_S2_함수 객체를 적용한 sort 알고리즘.cpp" />
    <ClCompile Include="C6_S1_at()의 out_of_range 예외.cpp" />
    <ClCompile Include="C6_S1_const와 반복자.cpp" />
    <ClCompile Include="C6_S1_erase() 멤버 함수.cpp" />
    <ClCompile Include="C6_S1_insert() 멤버 함수의 사용.cpp" />
    <ClCompile Include="C6_S1_iterator와 reverse_iterator.cpp" />
    <ClCompile Include="C6_S1_swap을 사용한 할당 메모리 제거.cpp" />
    <ClCompile Include="C6_S1_vector 반복자의 연산.cpp" />
    <ClCompile Include="C6_S1_vector 생성자의 초깃값 지정.cpp" />
    <ClCompile Include="C6_S1_vector와 vector의 비교.cpp" />
    <ClCompile Include="C6_S1_vector의 assign().cpp" />
    <ClCompile Include="C6_S1_vector의 begin()와 end().cpp" />
    <ClCompile Include="C6_S1_vector의 capacity().cpp" />
    <ClCompile Include="C6_S1_vector의 clear()와 empty().cpp" />
    <ClCompile Include="C6_S1_vector의 front()와 back() 참조.cpp" />
    <ClCompile Include="C6_S1_vector의 front()와 back().cpp" />
    <ClCompile Include="C6_S1_vector의 push_back().cpp" />
    <ClCompile Include="C6_S1_vector의 reserve().cpp" />
    <ClCompile Include="C6_S1_vector의 resize().cpp" />
    <ClCompile Include="C6_S1_vector의 size(), capacity(), max_size().cpp" />
    <ClCompile Include="C6_S1_vector의 size_type.cpp" />
    <ClCompile Include="C6_S1_vector의 swap().cpp" />
    <ClCompile Include="C6_S1_vector의 [] 연산자와 at() 멤버 함수.cpp" />
    <ClCompile Include="C6_S1_vector의 생성자.cpp" />
    <ClCompile Include="C6_S1_다른 버전의 insert() 멤버 함수.cpp" />
    <ClCompile Include="C6_S1_반복자로 동작하는 생성자와 assign() 멤버 함수.cpp" />
    <ClCompile Include="C6_S1_일반 반복자와 상수 반복자.cpp" />
    <ClCompile Include="C6_S2_deque의 insert().cpp" />
    <ClCompile Include="C6_S2_deque의 push_front().cpp" />
    <ClCompile Include="C6_S2_deque의 반복자.cpp" />
    <ClCompile Include="C6_S2_push_back 멤버 함수.cpp" />
    <ClCompile Include="C6_S2_vector와 deque.cpp" />
    <ClCompile Include="C6_S3_list와 vector의 insert().cpp" />
    <ClCompile Include="C6_S3_list의 insert()와 erase().cpp" />
    <ClCompile Include="C6_S3_list의 merge().cpp" />
    <ClCompile Include="C6_S3_list의 push_back, push_front, 반복자.cpp" />
    <ClCompile Include="C6_S3_list의 remove().cpp" />
    <ClCompile Include="C6_S3_list의 remove_if().cpp" />
    <ClCompile Include="C6_S3_list의 reverse().cpp" />
    <ClCompile Include="C6_S3_list의 sort().cpp" />
    <ClCompile Include="C6_S3_list의 splice() 다른 버전.cpp" />
    <ClCompile Include="C6_S3_list의 splice().cpp" />
    <ClCompile Include="C6_S3_list의 unique().cpp" />
    <ClCompile Include="C6_S3_list의 조건자 버전 merge().cpp" />
    <ClCompile Include="C6_S3_list의 조건자 버전 sort().cpp" />
    <ClCompile Include="C6_S3_list의 조건자 버전 unique().cpp" />
    <ClCompile Include="C7_S1_insert()의 반한값(pair 객체).cpp" />
    <ClCompile Include="C7_S1_set의 count().cpp" />
    <ClCompile Include="C7_S1_set의 equal_range().cpp" />
    <ClCompile Include="C7_S1_set의 find().cpp" />
    <ClCompile Include="C7_S1_set의 insert().cpp" />
    <ClCompile Include="C7_S1_set의 key_comp(), value_comp() 멤버 함수.cpp" />
    <ClCompile Include="C7_S1_set의 lower_bound(), upper_bound().cpp" />
    <ClCompile Include="C7_S1_set의 정렬 기준을 사용한 값 비교.cpp" />
    <ClCompile Include="C7_S1_set의 탐색 위치 지정 insert().cpp" />
    <ClCompile Include="C7_S1_정렬 기준 greater를 사용한 set.cpp" />
    <ClCompile Include="C7_S2_multiset의 equal_range().cpp" />
    <ClCompile Include="C7_S2_multiset의 insert().cpp" />
    <ClCompile Include="C7_S2_multiset의 찾기 관련 함수.cpp" />
    <ClCompile Include="C7_S3_map 컨테이너의 정렬 기준 조건자 greater.cpp" />
    <ClCompile Include="C7_S3_map의 insert() 반환 값.cpp" />
    <ClCompile Include="C7_S3_map의 insert().cpp" />
    <ClCompile Include="C7_S3_map의 [] 연산자.cpp" />
    <ClCompile Include="C7_S3_map의 찾기 관련 멤버 함수.cpp" />
    <ClCompile Include="C7_S4_multimap의 count()와 find().cpp" />
    <ClCompile Include="C7_S4_multimap의 lower_bound(), upper_bound(), equal_range().cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>